/**
 * ISrlSegmenter.java
 * 
 * Revision History:<br>
 * Jun 26, 2008 bpaulson - File created
 * 
 * <p>
 * 
 * <pre>
 * This work is released under the BSD License:
 * (C) 2008 Sketch Recognition Lab, Texas A&amp;M University (hereafter SRL @ TAMU)
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Sketch Recognition Lab, Texas A&amp;M University
 *       nor the names of its contributors may be used to endorse or promote
 *       products derived from this software without specific prior written
 *       permission.
 * THIS SOFTWARE IS PROVIDED BY SRL @ TAMU ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL SRL @ TAMU BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * </pre>
 */
package srl.sketch.recognizer;

import srl.sketch.core.InvalidParametersException;
import srl.sketch.core.SrlSegmentation;
import srl.sketch.core.SrlStroke;

import java.util.List;

/**
 * Basic interface for a segmenter/corner finder. The segmenter should take in
 * strokes (which are segmentable) and return a list of possible segmentations.
 * 
 * @author bpaulson
 */
public interface ISrlSegmenter extends Runnable {

	/**
	 * Return the segmenter's name
	 * 
	 * @return The name of the segmenter
	 */
	public String getName();

	/**
	 * Returns a list of possible segmentation interpretations
	 * 
	 * @return a list of possible segmentation interpretations
	 * @throws srl.sketch.core.InvalidParametersException
	 *             Thrown if the ISrlSegmenter has not received any strokes,
	 *             shapes, or other components to segment
	 */
	public List<SrlSegmentation> getSegmentations()
			throws InvalidParametersException;

	/**
	 * Returns the segmentations generated by a thread. Null if the
	 * segmentations are not yet created.
	 * 
	 * @return Segmentations generated by using the {@link #run()} function
	 */
	public List<SrlSegmentation> getThreadedSegmentations();

	/**
	 * Set the stroke to use for the segmenter.
	 * 
	 * @param stroke
	 *            Stroke to segment
	 */
	public void setStroke(SrlStroke stroke);

	/**
	 * Runs the getSegmentations() function, assuming that a stroke has already
	 * been input into the segmenter. The segmentations generated by the thread
	 * can be grabbed afterward by using {@link #getThreadedSegmentations()}.
	 */
	@Override
	public void run();
}
