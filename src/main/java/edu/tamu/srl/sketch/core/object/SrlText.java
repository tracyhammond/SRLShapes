package edu.tamu.srl.sketch.core.object;

import edu.tamu.srl.sketch.core.tobenamedlater.SrlShapeConfig;

import java.util.UUID;

/**
 * Created by gigemjt on 11/3/14.
 *
 * <p/>
 * Text can be either handwritten or defined from a keyboard.
 * If text is handwritten it will contain the shapes that make up the text.
 * If the text is defined from a keyboard it may still contains shapes inside of it.
 * <p/>
 * The text may contain unicode characters of any language.
 * And must be treated as containing unicode characters.
 *
 * @author gigemjt
 * @copyright Tracy Hammond, Sketch Recognition Lab, Texas A&M University
 */
public class SrlText extends SrlShape {

    /**
     * The discreet set of characters that is contained within this object.
     * <p/>
     * This value may contain unicode characters of any language.
     */
    private String mTextValue;
    /**
     * True if the text was generated by sketching.
     * False otherwise.
     * <p/>
     * If this object is a combination of multiple text objects then this will be true if any of them were handwritten.
     */
    private boolean mIsHandWritten;

    /**
     * Default constructor.
     * <p/>
     * Creates an object with an id and a time.
     */
    public SrlText() {
        super();
        mTextValue = null;
        mIsHandWritten = false;
    }

    /**
     * Default constructor.
     * <p/>
     * Creates an object with an id and a time.
     * @param text The text to create the object with
     */
    public SrlText(final String text) {
        super();
        mTextValue = text;
        mIsHandWritten = false;
    }

    /**
     * A copy constructor.
     * <p/>
     * Copies all values from the given object.
     *
     * @param o the object that is being copied.
     */
    public SrlText(final SrlText o) {
        this(o, true);
    }

    /**
     * Copy Constructor.
     *
     * @param o    the shape being copied.
     * @param deep true if a deep copy is being performed.  Otherwise a shallow copy is performed.
     */
    public SrlText(final SrlText o, final boolean deep) {
        super(o, deep);
        mIsHandWritten = o.isHandWritten();
        mTextValue = o.getTextValue();
    }

    /**
     * Accepts values that can only be set during construction.
     *
     * @param time        The time the shape was originally created.
     * @param id          The unique identifier of the shape.
     * @param config      The set of data used to configure interpretation.
     * @param description the description of the shape.
     */
    public SrlText(final long time, final UUID id, final SrlShapeConfig config,
            final String description) {
        super(time, id, config, description);
    }

    /**
     * Accepts values that can only be set during construction.
     *
     * @param time          The time the shape was originally created.
     * @param id            The unique identifier of the shape.
     * @param isUserCreated True if the user created the stroke instead of the computer.
     * @param config        The set of data used to configure interpretation.
     * @param description   the description of the shape.
     */
    public SrlText(final long time, final UUID id, final boolean isUserCreated,
            final SrlShapeConfig config, final String description) {
        super(time, id, isUserCreated, config, description);
    }

    /**
     * @return The text value.
     */
    public final String getTextValue() {
        return mTextValue;
    }

    /**
     * @param textValue the text value.
     */
    public final void setTextValue(final String textValue) {
        this.mTextValue = mTextValue;
    }

    /**
     * @return if the shape is hand written.
     */
    public final boolean isHandWritten() {
        return mIsHandWritten;
    }

    /**
     * @param isHandWritten set the shape to be handwritten or not.  true if it is handwritten.
     */
    public final void setIsHandWritten(final boolean isHandWritten) {
        this.mIsHandWritten = mIsHandWritten;
    }
}
